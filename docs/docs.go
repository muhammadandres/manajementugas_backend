// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "m.andres.novrizal@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/oauth": {
            "get": {
                "description": "Start the Google OAuth process. If successful, the user will be redirected to the URL \"(frontendURL)/auth-success?email=(encodedUserEmail)\u0026token=(encodedToken)\" with the user's email and token in the query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Initiate Google OAuth",
                "responses": {
                    "302": {
                        "description": "Redirect to success URL"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/board": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create a new board. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "boards"
                ],
                "summary": "Create a new board",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the board",
                        "name": "name_board",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.BoardResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/board/{boardId}/task/{taskId}": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Update various aspects of a task including manager, employee, files, and other details. This endpoint requires cookie authentication.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Update a task",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Board ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Task ID parameter",
                        "name": "request2",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "example@gmail.com",
                        "description": "Manager email",
                        "name": "request3",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "example@gmail.com",
                        "description": "Employee email",
                        "name": "request4",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Planning file",
                        "name": "request5",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Project file",
                        "name": "request6",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "example name task",
                        "description": "Name of the task",
                        "name": "request7",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "25",
                        "description": "Planning description percentage",
                        "name": "request8",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Planning description file",
                        "name": "request9",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "Approved",
                            "Not Approved"
                        ],
                        "type": "string",
                        "description": "Planning status",
                        "name": "request10",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "Working",
                            "Done",
                            "Undone"
                        ],
                        "type": "string",
                        "description": "Project status",
                        "name": "request11",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "17-11-2002",
                        "description": "Planning due date",
                        "name": "request12",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "17-11-2002",
                        "description": "Project due date",
                        "name": "request13",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "description": "Priority",
                        "name": "request14",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "example comment",
                        "description": "Project comment",
                        "name": "request15",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.WebResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/web.UpdateResponseTask"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/board/{id}": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Edit a board's name by its ID.  This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "boards"
                ],
                "summary": "Edit a board",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Board ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New name of the board",
                        "name": "name_board",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BoardResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Delete a board by its ID.  This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "boards"
                ],
                "summary": "Delete a board",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Board ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/boards": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieve all boards.  This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "boards"
                ],
                "summary": "Get all boards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/web.BoardResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/invitations": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get a list of all invitations. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invitations"
                ],
                "summary": "Get all invitations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.WebResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/web.InvitationResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/invitations/{invitationID}": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Accept or reject an invitation to a task. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invitations"
                ],
                "summary": "Respond to an invitation",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Invitation ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "accept",
                            "reject"
                        ],
                        "type": "string",
                        "description": "Invitation response status",
                        "name": "request",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.WebResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/web.InvitationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/{id}": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get detailed information about a task by its ID. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get a task by ID",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Board ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.WebResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/web.TaskResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Remove a task and its associated owner. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Delete a task and its owner",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Task ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/{id}/employee/{employee_id}": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Remove an employee from a specific task. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Delete an employee from a task",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Task ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Employee ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/{id}/manager/{manager_id}": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Remove a manager from a specific task. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Delete a manager from a task",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Task ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Manager ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/{id}/planning-description-file/{file_id}": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Remove a planning description file from a specific task. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Delete a planning description file",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Task ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "File ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/{id}/planning-file/{file_id}": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Remove a planning file from a specific task. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Delete a planning file",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Task ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "File ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/{id}/project-file/{file_id}": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Remove a project file from a specific task. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Delete a project file",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Task ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "File ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/{}:board_id}": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create a new task and assign it to the authenticated user as the owner. This endpoint requires cookie authentication.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create a new task and assign an owner",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Board ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "name_task",
                        "description": "Name of the task",
                        "name": "request",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.WebResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/web.TaskCreateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get a list of all tasks with their owners. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get all tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.WebResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/web.TaskResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/forgot-password": {
            "post": {
                "description": "Send a reset code to the user's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Initiate forgot password process",
                "parameters": [
                    {
                        "description": "User's email",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Login with user credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Authenticate a user",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.TokenResponse"
                        },
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "Authorization"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/reset-password": {
            "post": {
                "description": "Reset the user's password using the provided reset code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Reset user's password",
                "parameters": [
                    {
                        "description": "Password reset info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User signup information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieve information for all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.GetAllUsersResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/web.UserDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retrieve user details by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "User ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.GetUserByIDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Update a user's information. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "User ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User's email",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.UpdateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.UpdateUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Cookie authentication required",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Delete a user by their ID. This endpoint requires cookie authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "User ID parameter",
                        "name": "request",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Cookie authentication required",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "web.BoardResponse": {
            "type": "object",
            "properties": {
                "board_created_by": {
                    "type": "object",
                    "properties": {
                        "user_email": {
                            "type": "string",
                            "example": "user@example.com"
                        },
                        "user_id": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                },
                "board_id": {
                    "type": "integer",
                    "example": 1
                },
                "name_board": {
                    "type": "string",
                    "example": "My Project Board"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.TaskInfo"
                    }
                }
            }
        },
        "web.EmployeeResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "employee@example.com"
                }
            }
        },
        "web.EmployeeWithInvitation": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "employee@example.com"
                },
                "invitation_status": {
                    "type": "string",
                    "example": "Pending"
                },
                "user_id": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "web.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Error Message"
                }
            }
        },
        "web.FileResponse": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "example": "document.pdf"
                },
                "file_url": {
                    "type": "string",
                    "example": "https://example.com/file.pdf"
                }
            }
        },
        "web.ForgotPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                }
            }
        },
        "web.GetAllUsersResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.UserDetail"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "web.GetUserByIDResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/web.UserDetail"
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "web.InvitationResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "invitation_status": {
                    "type": "string",
                    "example": "Pending"
                },
                "role": {
                    "type": "string",
                    "example": "Manager"
                },
                "task_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "web.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "web.ManagerResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "manager@example.com"
                }
            }
        },
        "web.ManagerWithInvitation": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "manager@example.com"
                },
                "invitation_status": {
                    "type": "string",
                    "example": "Accepted"
                },
                "user_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "web.Owner": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "owner@example.com"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "web.PlanningDescriptionFile": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "example": "planning_description.pdf"
                },
                "file_url": {
                    "type": "string",
                    "example": "https://bucket-name.s3.amazonaws.com/planning_description.pdf"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "web.PlanningFile": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "example": "planning_document.docx"
                },
                "file_url": {
                    "type": "string",
                    "example": "https://bucket-name.s3.amazonaws.com/planning_document.docx"
                },
                "id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "web.ProjectFile": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "example": "project_report.pdf"
                },
                "file_url": {
                    "type": "string",
                    "example": "https://bucket-name.s3.amazonaws.com/project_report.pdf"
                },
                "id": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "web.ResetPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "new_password": {
                    "type": "string",
                    "example": "password123"
                },
                "reset_code": {
                    "type": "string",
                    "example": "12345"
                }
            }
        },
        "web.SignupRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "web.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Success Message"
                }
            }
        },
        "web.TaskCreateResponse": {
            "type": "object",
            "properties": {
                "board_id": {
                    "type": "integer",
                    "example": 1
                },
                "name_task": {
                    "type": "string",
                    "example": "Implement feature X"
                },
                "owner_id": {
                    "type": "integer",
                    "example": 1
                },
                "task_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "web.TaskInfo": {
            "type": "object",
            "properties": {
                "board_id": {
                    "type": "integer",
                    "example": 1
                },
                "employee": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.EmployeeWithInvitation"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "manager": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.ManagerWithInvitation"
                    }
                },
                "name_task": {
                    "type": "string",
                    "example": "Implement feature X"
                },
                "owner": {
                    "$ref": "#/definitions/web.Owner"
                },
                "planning_description_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.PlanningDescriptionFile"
                    }
                },
                "planning_description_persen": {
                    "type": "string",
                    "example": "50"
                },
                "planning_due_date": {
                    "type": "string",
                    "example": "2023-12-31"
                },
                "planning_file": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.PlanningFile"
                    }
                },
                "planning_status": {
                    "type": "string",
                    "example": "Approved"
                },
                "priority": {
                    "type": "string",
                    "example": "High"
                },
                "project_comment": {
                    "type": "string",
                    "example": "Making good progress"
                },
                "project_due_date": {
                    "type": "string",
                    "example": "2024-01-15"
                },
                "project_file": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.ProjectFile"
                    }
                },
                "project_status": {
                    "type": "string",
                    "example": "Undone"
                }
            }
        },
        "web.TaskResponse": {
            "type": "object",
            "properties": {
                "board_id": {
                    "type": "integer",
                    "example": 1
                },
                "employee": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.EmployeeWithInvitation"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "manager": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.ManagerWithInvitation"
                    }
                },
                "name_task": {
                    "type": "string",
                    "example": "Implement feature X"
                },
                "owner": {
                    "$ref": "#/definitions/web.Owner"
                },
                "planning_description_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.PlanningDescriptionFile"
                    }
                },
                "planning_description_persen": {
                    "type": "string",
                    "example": "50"
                },
                "planning_due_date": {
                    "type": "string",
                    "example": "2023-12-31"
                },
                "planning_file": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.PlanningFile"
                    }
                },
                "planning_status": {
                    "type": "string",
                    "example": "Approved"
                },
                "priority": {
                    "type": "string",
                    "example": "High"
                },
                "project_comment": {
                    "type": "string",
                    "example": "Making good progress"
                },
                "project_due_date": {
                    "type": "string",
                    "example": "2024-01-15"
                },
                "project_file": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.ProjectFile"
                    }
                },
                "project_status": {
                    "type": "string",
                    "example": "Undone"
                }
            }
        },
        "web.TokenResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Signup successfully"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "web.UpdateResponseTask": {
            "type": "object",
            "properties": {
                "board_id": {
                    "type": "integer",
                    "example": 1
                },
                "emails_sent": {
                    "type": "string",
                    "example": "Email send infomation"
                },
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.EmployeeResponse"
                    }
                },
                "managers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.ManagerResponse"
                    }
                },
                "name_task": {
                    "type": "string",
                    "example": "Updated Task Name"
                },
                "planning_description_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.FileResponse"
                    }
                },
                "planning_description_persen": {
                    "type": "string",
                    "example": "75"
                },
                "planning_due_date": {
                    "type": "string",
                    "example": "2023-12-31"
                },
                "planning_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.FileResponse"
                    }
                },
                "planning_status": {
                    "type": "string",
                    "enum": [
                        "Approved",
                        "Not Approved"
                    ],
                    "example": "Approved"
                },
                "priority": {
                    "type": "string",
                    "enum": [
                        "Low",
                        "Medium",
                        "High"
                    ],
                    "example": "High"
                },
                "project_comment": {
                    "type": "string",
                    "example": "Updated project comment"
                },
                "project_due_date": {
                    "type": "string",
                    "example": "2024-01-15"
                },
                "project_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.FileResponse"
                    }
                },
                "project_status": {
                    "type": "string",
                    "enum": [
                        "Working",
                        "Done",
                        "Undone"
                    ],
                    "example": "Working"
                },
                "task_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "web.UpdateUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                }
            }
        },
        "web.UserDetail": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "web.WebResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Success message"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Project Management App",
	Description:      "API documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
