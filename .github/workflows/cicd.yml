name: Deploy Go Application

on:
    push:
        branches:
          - master

jobs:
    build:
        runs-on: ubuntu-latest 
        steps:
            - name: Checkout Source
              uses: actions/checkout@v4
            - name: Create .env file
              run: |
                echo 'PORT=${{ secrets.PORT }}' >> .env
                echo 'DB_URL=${{ secrets.DB_URL }}' >> .env
                echo 'SECRET=${{ secrets.SECRET }}' >> .env
                echo 'AWS_REGION=${{ secrets.AWS_REGION }}' >> .env
                echo 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' >> .env
                echo 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' >> .env
                
            - name: Create credentials.json
              env:
                GOOGLE_CREDENTIALS: ${{ secrets.CREDENTIALS }}
              run: |
                echo '${CREDENTIALS}' >> credentials.json    
                
            - name: Login to Docker Hub
              run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
            - name: Build Docker image
              run: docker build -t muhammadandres/manajementugas .
            - name: Push image to Docker Hub
              run: docker push muhammadandres/manajementugas:latest
    deploy:
        needs: build
        runs-on: self-hosted
        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}
            - name: Install AWS CLI v2
              run: |
                sudo apt-get update && sudo apt-get install -y unzip
                curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                unzip -o awscliv2.zip
                sudo ./aws/install --update
              shell: bash
            - name: Pull Docker image
              run: docker pull muhammadandres/manajementugas:latest
            - name: Delete old container
              run: docker rm -f manajemen-tugas-container || true
            - name: Create persistent volume
              run: docker volume create app-data
            - name: Run Docker container
              env:
                DB_HOST: ${{ secrets.DB_HOST }}
                DB_USER: ${{ secrets.DB_USER }}
                DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
                DB_NAME: ${{ secrets.DB_NAME }}
              run: |
                docker run -d -p 4040:4040 --name manajemen-tugas-container \
                  -v app-data:/app \
                  -e DB_HOST=$DB_HOST \
                  -e DB_USER=$DB_USER \
                  -e DB_PASSWORD=$DB_PASSWORD \
                  -e DB_NAME=$DB_NAME \
                  muhammadandres/manajementugas:latest
